{"ast":null,"code":"var _jsxFileName = \"/home/ras/Documents/PROJECTS/REACT/Five-Nights-at-Freddys-Web/src/Game.js\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Animatronic from \"./components/Animatronic\";\nimport Office from \"./components/Office\";\nimport Camera from \"./components/Camera\";\nimport Hud from \"./components/Hud\";\nimport Media from \"./components/Media\";\nlet isBlackout = false;\nlet {\n  Ambience\n} = Media.Sounds;\nAmbience.loop = true;\nlet officeProps = {\n  leftDoor: false,\n  rightDoor: false\n};\n\nconst Game = ({\n  office,\n  isCameraOpen,\n  energy,\n  gameOver,\n  endGame,\n  dispatch\n}) => {\n  useEffect(() => {\n    Ambience.currentTime = 0;\n    Ambience.play();\n    isBlackout = false;\n    officeProps = {\n      leftDoor: false,\n      rightDoor: false\n    };\n  }, []);\n  useEffect(() => {\n    if (gameOver) Ambience.pause();\n  }, [gameOver]);\n  useEffect(() => {\n    if (energy <= 0) {\n      isBlackout = true;\n      Ambience.pause();\n    }\n  }, [energy]);\n  useEffect(() => {\n    let newTime = 5000;\n    if (office.leftDoor) newTime -= 1100;\n    if (office.rightDoor) newTime -= 1100;\n    if (office.leftLight) newTime -= 500;\n    if (office.rightLight) newTime -= 500;\n    if (isCameraOpen) newTime -= 1100;\n    dispatch({\n      type: \"CHANGE_TIME\",\n      content: newTime\n    });\n    officeProps = {\n      leftDoor: office.leftDoor,\n      rightDoor: office.rightDoor\n    };\n  }, [office.leftDoor, office.rightDoor, office.leftLight, office.rightLight, isCameraOpen]);\n\n  const handleJumpscare = character => {\n    if (isBlackout || gameOver) return;\n    dispatch({\n      type: \"CHANGE_ANIMATRONIC\",\n      animatronic: character,\n      animatronicState: {\n        door: null,\n        camera: null,\n        jumpscare: true\n      }\n    });\n    dispatch({\n      type: \"CHANGE_JUMPSCARE\",\n      animatronic: character\n    });\n    if (character === \"Foxy\" || character === \"Freddy\") dispatch({\n      type: \"FORCE_CAMERA_CLOSE\"\n    });\n    setTimeout(() => {\n      if (!isCameraOpen) dispatch({\n        type: \"FORCE_CAMERA_CLOSE\"\n      });\n    }, 10000);\n  };\n\n  async function isThisDoorOpen(door) {\n    const isDoorOpen = await officeProps[door];\n    return isDoorOpen;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Animatronic, {\n    handleJumpscare: handleJumpscare,\n    gameOver: gameOver,\n    isThisDoorOpen: isThisDoorOpen,\n    blackout: energy <= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), !gameOver ? /*#__PURE__*/React.createElement(React.Fragment, null, energy <= 0 ? null : /*#__PURE__*/React.createElement(Hud, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Camera, {\n    handleJumpscare: handleJumpscare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), isCameraOpen ? null : /*#__PURE__*/React.createElement(Office, {\n    endGame: endGame,\n    blackout: energy <= 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })) : null);\n};\n\nconst mapStateToProps = state => {\n  return {\n    animatronics: state.animatronicsReducer,\n    time: state.configReducer.time,\n    hour: state.configReducer.hour,\n    energy: state.configReducer.energy,\n    office: state.officeReducer,\n    camera: state.cameraReducer.camera,\n    isCameraOpen: state.cameraReducer.isCameraOpen\n  };\n};\n\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/home/ras/Documents/PROJECTS/REACT/Five-Nights-at-Freddys-Web/src/Game.js"],"names":["React","useEffect","connect","Animatronic","Office","Camera","Hud","Media","isBlackout","Ambience","Sounds","loop","officeProps","leftDoor","rightDoor","Game","office","isCameraOpen","energy","gameOver","endGame","dispatch","currentTime","play","pause","newTime","leftLight","rightLight","type","content","handleJumpscare","character","animatronic","animatronicState","door","camera","jumpscare","setTimeout","isThisDoorOpen","isDoorOpen","mapStateToProps","state","animatronics","animatronicsReducer","time","configReducer","hour","officeReducer","cameraReducer"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Animatronic from \"./components/Animatronic\";\r\nimport Office from \"./components/Office\";\r\nimport Camera from \"./components/Camera\";\r\nimport Hud from \"./components/Hud\";\r\nimport Media from \"./components/Media\";\r\n\r\nlet isBlackout = false;\r\n\r\nlet { Ambience } = Media.Sounds;\r\nAmbience.loop = true;\r\n\r\nlet officeProps = { leftDoor: false, rightDoor: false };\r\n\r\nconst Game = ({\r\n  office,\r\n  isCameraOpen,\r\n  energy,\r\n  gameOver,\r\n  endGame,\r\n  dispatch,\r\n}) => {\r\n  useEffect(() => {\r\n    Ambience.currentTime = 0;\r\n    Ambience.play();\r\n    isBlackout = false;\r\n    officeProps = { leftDoor: false, rightDoor: false };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (gameOver) Ambience.pause();\r\n  }, [gameOver]);\r\n\r\n  useEffect(() => {\r\n    if (energy <= 0) {\r\n      isBlackout = true;\r\n      Ambience.pause();\r\n    }\r\n  }, [energy]);\r\n\r\n  useEffect(() => {\r\n    let newTime = 5000;\r\n    if (office.leftDoor) newTime -= 1100;\r\n    if (office.rightDoor) newTime -= 1100;\r\n    if (office.leftLight) newTime -= 500;\r\n    if (office.rightLight) newTime -= 500;\r\n    if (isCameraOpen) newTime -= 1100;\r\n\r\n    dispatch({ type: \"CHANGE_TIME\", content: newTime });\r\n    officeProps = {\r\n      leftDoor: office.leftDoor,\r\n      rightDoor: office.rightDoor,\r\n    };\r\n  }, [\r\n    office.leftDoor,\r\n    office.rightDoor,\r\n    office.leftLight,\r\n    office.rightLight,\r\n    isCameraOpen,\r\n  ]);\r\n\r\n  const handleJumpscare = (character) => {\r\n    if (isBlackout || gameOver) return;\r\n    dispatch({\r\n      type: \"CHANGE_ANIMATRONIC\",\r\n      animatronic: character,\r\n      animatronicState: {\r\n        door: null,\r\n        camera: null,\r\n        jumpscare: true,\r\n      },\r\n    });\r\n\r\n    dispatch({ type: \"CHANGE_JUMPSCARE\", animatronic: character });\r\n    if (character === \"Foxy\" || character === \"Freddy\")\r\n      dispatch({ type: \"FORCE_CAMERA_CLOSE\" });\r\n    setTimeout(() => {\r\n      if (!isCameraOpen) dispatch({ type: \"FORCE_CAMERA_CLOSE\" });\r\n    }, 10000);\r\n  };\r\n\r\n  async function isThisDoorOpen(door) {\r\n    const isDoorOpen = await officeProps[door];\r\n    return isDoorOpen;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Animatronic\r\n        handleJumpscare={handleJumpscare}\r\n        gameOver={gameOver}\r\n        isThisDoorOpen={isThisDoorOpen}\r\n        blackout={energy <= 0}\r\n      />\r\n\r\n      {!gameOver ? (\r\n        <>\r\n          {energy <= 0 ? null : <Hud />}\r\n          <Camera handleJumpscare={handleJumpscare} />\r\n          {isCameraOpen ? null : (\r\n            <Office endGame={endGame} blackout={energy <= 0} />\r\n          )}\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    animatronics: state.animatronicsReducer,\r\n    time: state.configReducer.time,\r\n    hour: state.configReducer.hour,\r\n    energy: state.configReducer.energy,\r\n    office: state.officeReducer,\r\n    camera: state.cameraReducer.camera,\r\n    isCameraOpen: state.cameraReducer.isCameraOpen,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Game);\r\n"]},"metadata":{},"sourceType":"module"}