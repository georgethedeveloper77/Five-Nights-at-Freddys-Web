{"ast":null,"code":"var _jsxFileName = \"/home/ras/Documents/PROJECTS/REACT/Five-Nights-at-Freddys-Web/src/components/Camera.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport getCam from \"./Images\";\nimport AnimatronicsMoving from \"../media/Sounds/garble1.mp3\";\nimport AnimatronicsMoving2 from \"../media/Sounds/garble2.mp3\";\nimport Static from \"../media/Textures/Static-Cam.webp\";\nimport Black from \"../media/Textures/black.jpg\";\nimport Media from \"./Media\";\nimport CameraMap from \"../components/CameraMap\";\nimport CameraButton from \"../components/CameraButton\";\n\nfunction Camera({\n  animatronics,\n  areAnimatronicsMoving,\n  isCameraOpen,\n  office,\n  camera,\n  cameraButtonDisappear,\n  dispatch\n}) {\n  const [Image, setImage] = useState(Media.Images.Stage);\n  const closeCameraRef = useRef(null);\n  const cameraDivRef = useRef(null);\n\n  const handleCameraButton = () => {\n    dispatch({\n      type: \"SET_IS_OPEN\"\n    });\n  };\n\n  const handleCameraChange = e => {\n    e.preventDefault();\n    Media.Sounds.CameraChange.play();\n    dispatch({\n      type: \"CHANGE_CAMERA\",\n      content: e.target.title\n    });\n  };\n\n  useEffect(() => {\n    if (cameraDivRef.current) {\n      if (isCameraOpen) setTimeout(() => {\n        cameraDivRef.current.style.display = \"flex\";\n      }, 350);else setTimeout(() => {\n        cameraDivRef.current.style.display = \"none\";\n      }, 100);\n    }\n  }, [isCameraOpen]);\n  useEffect(() => {\n    const {\n      Bonnie,\n      Chica,\n      Freddy,\n      Foxy\n    } = animatronics;\n    let result = \"\";\n    if (Bonnie.camera === camera) result += \"_b\";\n    if (Chica.camera === camera) result += \"_c\";\n    if (Freddy.camera === camera) result += \"_f\";\n    const newCamera = getCam(result, camera, Foxy.camera);\n    setImage(newCamera);\n  }, [camera, animatronics, areAnimatronicsMoving, animatronics.Foxy.camera]);\n  useEffect(() => {\n    if (areAnimatronicsMoving && isCameraOpen) {\n      let MusicNumber = Math.floor(Math.random() * 2);\n      let Sound;\n\n      if (MusicNumber == 1 || MusicNumber == 2) {\n        Sound = new Audio(AnimatronicsMoving);\n      } else {\n        Sound = new Audio(AnimatronicsMoving2);\n      }\n\n      Sound.play();\n    }\n  }, [areAnimatronicsMoving]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, cameraButtonDisappear ? null : /*#__PURE__*/React.createElement(CameraButton, {\n    handleCameraButton: handleCameraButton,\n    style: {\n      zIndex: \"1\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), isCameraOpen ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    draggable: \"false\",\n    className: \"camera opening animation\",\n    \"data-left-door\": office.leftDoor,\n    \"data-right-door\": office.rightDoor,\n    id: \"camera\",\n    src: Media.Images.Up,\n    alt: \"Opening camera\",\n    style: {\n      margin: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      position: \"absolute\",\n      top: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"camera-container\",\n    style: {\n      display: \"none\"\n    },\n    ref: cameraDivRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CameraMap, {\n    handleCameraChange: handleCameraChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), areAnimatronicsMoving ? /*#__PURE__*/React.createElement(\"img\", {\n    draggable: \"false\",\n    src: Black,\n    alt: \"Animatronics are moving\",\n    className: \"animatronics-true\",\n    style: {\n      height: \"100vh\",\n      width: \"100vw\",\n      backgroundColor: \"black\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: Image,\n    alt: \"Camera\",\n    className: \"camera-img\",\n    style: {\n      width: \"100vw\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Static\",\n    src: Static,\n    style: {\n      opacity: \"0.1\",\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    draggable: \"false\",\n    className: \"static-open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }))) : /*#__PURE__*/React.createElement(\"img\", {\n    draggable: \"false\",\n    className: `camera opening`,\n    id: \"camera\",\n    ref: closeCameraRef,\n    src: Media.Images.Down,\n    alt: \"Closing camera\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    animatronics: state.animatronicsReducer,\n    camera: state.cameraReducer.camera,\n    office: state.officeReducer,\n    isCameraOpen: state.cameraReducer.isCameraOpen,\n    areAnimatronicsMoving: state.cameraReducer.areAnimatronicsMoving,\n    jumpscare: state.configReducer.jumpscare,\n    cameraButtonDisappear: state.configReducer.cameraButtonDisappear\n  };\n};\n\nexport default connect(mapStateToProps)(Camera);","map":{"version":3,"sources":["/home/ras/Documents/PROJECTS/REACT/Five-Nights-at-Freddys-Web/src/components/Camera.js"],"names":["React","useState","useEffect","useRef","connect","getCam","AnimatronicsMoving","AnimatronicsMoving2","Static","Black","Media","CameraMap","CameraButton","Camera","animatronics","areAnimatronicsMoving","isCameraOpen","office","camera","cameraButtonDisappear","dispatch","Image","setImage","Images","Stage","closeCameraRef","cameraDivRef","handleCameraButton","type","handleCameraChange","e","preventDefault","Sounds","CameraChange","play","content","target","title","current","setTimeout","style","display","Bonnie","Chica","Freddy","Foxy","result","newCamera","MusicNumber","Math","floor","random","Sound","Audio","zIndex","leftDoor","rightDoor","Up","margin","width","height","position","top","backgroundColor","opacity","Down","mapStateToProps","state","animatronicsReducer","cameraReducer","officeReducer","jumpscare","configReducer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport getCam from \"./Images\";\r\n\r\nimport AnimatronicsMoving from \"../media/Sounds/garble1.mp3\";\r\nimport AnimatronicsMoving2 from \"../media/Sounds/garble2.mp3\";\r\nimport Static from \"../media/Textures/Static-Cam.webp\";\r\nimport Black from \"../media/Textures/black.jpg\";\r\nimport Media from \"./Media\";\r\n\r\nimport CameraMap from \"../components/CameraMap\";\r\nimport CameraButton from \"../components/CameraButton\";\r\n\r\nfunction Camera({\r\n    animatronics,\r\n    areAnimatronicsMoving,\r\n    isCameraOpen,\r\n    office,\r\n    camera,\r\n    cameraButtonDisappear,\r\n    dispatch,\r\n}) {\r\n    const [Image, setImage] = useState(Media.Images.Stage);\r\n\r\n    const closeCameraRef = useRef(null);\r\n    const cameraDivRef = useRef(null);\r\n\r\n    const handleCameraButton = () => {\r\n        dispatch({ type: \"SET_IS_OPEN\" });\r\n    };\r\n\r\n    const handleCameraChange = (e) => {\r\n        e.preventDefault();\r\n        Media.Sounds.CameraChange.play();\r\n        dispatch({ type: \"CHANGE_CAMERA\", content: e.target.title });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (cameraDivRef.current) {\r\n            if (isCameraOpen)\r\n                setTimeout(() => {\r\n                    cameraDivRef.current.style.display = \"flex\";\r\n                }, 350);\r\n            else\r\n                setTimeout(() => {\r\n                    cameraDivRef.current.style.display = \"none\";\r\n                }, 100);\r\n        }\r\n    }, [isCameraOpen]);\r\n\r\n    useEffect(() => {\r\n        const { Bonnie, Chica, Freddy, Foxy } = animatronics;\r\n        let result = \"\";\r\n        if (Bonnie.camera === camera) result += \"_b\";\r\n        if (Chica.camera === camera) result += \"_c\";\r\n        if (Freddy.camera === camera) result += \"_f\";\r\n\r\n        const newCamera = getCam(result, camera, Foxy.camera);\r\n        setImage(newCamera);\r\n    }, [camera, animatronics, areAnimatronicsMoving, animatronics.Foxy.camera]);\r\n\r\n    useEffect(() => {\r\n        if (areAnimatronicsMoving && isCameraOpen) {\r\n            let MusicNumber = Math.floor(Math.random() * 2);\r\n            let Sound;\r\n            if (MusicNumber == 1 || MusicNumber == 2) {\r\n                Sound = new Audio(AnimatronicsMoving);\r\n            } else {\r\n                Sound = new Audio(AnimatronicsMoving2);\r\n            }\r\n            Sound.play();\r\n        }\r\n    }, [areAnimatronicsMoving]);\r\n\r\n    return (\r\n        <div>\r\n            {cameraButtonDisappear ? null : (\r\n                <CameraButton\r\n                    handleCameraButton={handleCameraButton}\r\n                    style={{ zIndex: \"1\" }}\r\n                />\r\n            )}\r\n            {isCameraOpen ? (\r\n                <>\r\n                    <img\r\n                        draggable=\"false\"\r\n                        className=\"camera opening animation\"\r\n                        data-left-door={office.leftDoor}\r\n                        data-right-door={office.rightDoor}\r\n                        id=\"camera\"\r\n                        src={Media.Images.Up}\r\n                        alt=\"Opening camera\"\r\n                        style={{\r\n                            margin: 0,\r\n                            width: \"100vw\",\r\n                            height: \"100vh\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className=\"camera-container\"\r\n                        style={{ display: \"none\" }}\r\n                        ref={cameraDivRef}\r\n                    >\r\n                        <CameraMap handleCameraChange={handleCameraChange} />\r\n                        {areAnimatronicsMoving ? (\r\n                            <img\r\n                                draggable=\"false\"\r\n                                src={Black}\r\n                                alt=\"Animatronics are moving\"\r\n                                className=\"animatronics-true\"\r\n                                style={{\r\n                                    height: \"100vh\",\r\n                                    width: \"100vw\",\r\n                                    backgroundColor: \"black\",\r\n                                    position: \"absolute\",\r\n                                }}\r\n                            />\r\n                        ) : (\r\n                            <img\r\n                                src={Image}\r\n                                alt=\"Camera\"\r\n                                className=\"camera-img\"\r\n                                style={{\r\n                                    width: \"100vw\",\r\n                                    position: \"absolute\",\r\n                                }}\r\n                            />\r\n                        )}\r\n                        <img\r\n                            alt=\"Static\"\r\n                            src={Static}\r\n                            style={{\r\n                                opacity: \"0.1\",\r\n                                width: \"100vw\",\r\n                                height: \"100vh\",\r\n                            }}\r\n                            draggable=\"false\"\r\n                            className=\"static-open\"\r\n                        />\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <img\r\n                    draggable=\"false\"\r\n                    className={`camera opening`}\r\n                    id=\"camera\"\r\n                    ref={closeCameraRef}\r\n                    src={Media.Images.Down}\r\n                    alt=\"Closing camera\"\r\n                    style={{\r\n                        width: \"100vw\",\r\n                        height: \"100vh\",\r\n                        position: \"absolute\",\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        animatronics: state.animatronicsReducer,\r\n        camera: state.cameraReducer.camera,\r\n        office: state.officeReducer,\r\n        isCameraOpen: state.cameraReducer.isCameraOpen,\r\n        areAnimatronicsMoving: state.cameraReducer.areAnimatronicsMoving,\r\n        jumpscare: state.configReducer.jumpscare,\r\n        cameraButtonDisappear: state.configReducer.cameraButtonDisappear,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Camera);\r\n"]},"metadata":{},"sourceType":"module"}